---
- name: cfssl | Create directory
  file:
    path: "{{ ssl_dir }}"
    state: directory
  
    
- name: cfssl | copying templates
  template:
    src: "{{ item }}"
    dest: "{{ ssl_dir }}"
  with_items:
    - ca-csr.json
    - ca-config.json
    - admin-csr.json
    - node-csr.json
    - kube-proxy-csr.json
    - kubernetes-csr.json


- name: cfssl | create -> ca-key.pem, ca.pem 
  shell: >
    cfssl gencert 
    -initca ca-csr.json | cfssljson -bare ca
  args:
    chdir: "{{ ssl_dir }}"

    
- name: cfssl | create -> admin-key.pem, admin.pem
  shell: >
    cfssl gencert 
    -ca=ca.pem 
    -ca-key=ca-key.pem 
    -config=ca-config.json 
    -profile=kubernetes 
    admin-csr.json | cfssljson -bare admin
  args:
    chdir: "{{ ssl_dir }}"


- name: cfssl | create -> kube-proxy-key.pem, kube-proxy.pem
  shell: >
    cfssl gencert 
    -ca=ca.pem 
    -ca-key=ca-key.pem 
    -config=ca-config.json 
    -profile=kubernetes 
    kube-proxy-csr.json | cfssljson -bare kube-proxy
  args:
    chdir: "{{ ssl_dir }}"


- name: cfssl | create -> kubernetes-key.pem, kubernetes.pem
  shell: >
    cfssl gencert 
    -ca=ca.pem
    -ca-key=ca-key.pem 
    -config=ca-config.json 
    -profile=kubernetes 
    kubernetes-csr.json | cfssljson -bare kubernetes
  args:
    chdir: "{{ ssl_dir }}"


- name: cfssl | create -> node-key.pem, node.pem
  shell: >
    cfssl gencert
    -ca=ca.pem
    -ca-key=ca-key.pem
    -config=ca-config.json
    -profile=kubernetes
    node-csr.json | cfssljson -bare node
  args:
    chdir: "{{ ssl_dir }}"

